<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<Meta name="ExplicitAutoJoints">true</Meta>
	<External>null</External>
	<External>nil</External>
	<Item class="LocalScript" referent="RBX22AA55CC0E20437FA0817510AC4DC942">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="Disabled">false</bool>
			<Content name="LinkedSource"><null></null></Content>
			<string name="Name">Animate</string>
			<string name="ScriptGuid">{45E1881A-AD32-40F9-A39F-99846EFF84A5}</string>
			<ProtectedString name="Source"><![CDATA[local humanoid = script.Parent:WaitForChild("Humanoid")

if (humanoid.RigType == Enum.HumanoidRigType.R6) then
	require(script:WaitForChild("R6"))(script)
else
	require(script:WaitForChild("R15"))(script)
end]]></ProtectedString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="BoolValue" referent="RBXCE9FC997FA8A4685B9518F9960B3C00E">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Loaded</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<bool name="Value">false</bool>
			</Properties>
		</Item>
		<Item class="ObjectValue" referent="RBX08E491F1D8BC4A2AA6B39115808AA35B">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">RepHumanoid</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<Ref name="Value">null</Ref>
			</Properties>
		</Item>
		<Item class="BindableFunction" referent="RBX14EA540115BA4A5D8FAAB38B845BB1D3">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">PlayEmote</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX26D1BEEB947140808949EEB45EA815A8">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">R6</string>
				<string name="ScriptGuid">{FB1936F7-25CC-4631-B645-7C6F7C56836F}</string>
				<ProtectedString name="Source"><![CDATA[local module = script

for _, v in next, module:GetChildren() do
	v.Parent = script
end

return function(script)
	
local Figure = script.Parent
local Torso = Figure:WaitForChild("Torso")
local RightShoulder = Torso:WaitForChild("Right Shoulder")
local LeftShoulder = Torso:WaitForChild("Left Shoulder")
local RightHip = Torso:WaitForChild("Right Hip")
local LeftHip = Torso:WaitForChild("Left Hip")
local Neck = Torso:WaitForChild("Neck")
local Humanoid = Figure:WaitForChild("Humanoid")
local pose = "Standing"

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0
local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=180435571", weight = 9 },
				{ id = "http://www.roblox.com/asset/?id=180435792", weight = 1 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=180426354", weight = 10 } 
			}, 
	run = 	{
				{ id = "run.xml", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=125750702", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=180436148", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=180436334", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=178130996", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=182393478", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=129967390", weight = 10 } 
--				{ id = "slash.xml", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=129967478", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=128777973", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=128853357", weight = 10 } 
			},
	dance1 = {
				{ id = "http://www.roblox.com/asset/?id=182435998", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491037", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491065", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=182436842", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491248", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491277", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=182436935", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491368", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=182491423", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=129423131", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=129423030", weight = 10 } 
			},
}
local dances = {"dance1", "dance2", "dance3"}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance1 = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	-- check for config values
	local config = script:FindFirstChild(name)
	if (config ~= nil) then
--		print("Loading anims " .. name)
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
	--			print(name .. " [" .. idx .. "] " .. animTable[name][idx].anim.AnimationId .. " (" .. animTable[name][idx].weight .. ")")
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
--			print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
end

-- Setup animation objects
local function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.3

local toolTransitionTime = 0.1
local fallTransitionTime = 0.3
local jumpMaxLimbVelocity = 0.75

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end
	return oldAnim
end

function setAnimationSpeed(speed)
	if speed ~= currentAnimSpeed then
		currentAnimSpeed = speed
		currentAnimTrack:AdjustSpeed(currentAnimSpeed)
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then

		local repeatAnim = currentAnim
		-- return to idle if finishing an emote
		if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
			repeatAnim = "idle"
		end
		
		local animSpeed = currentAnimSpeed
		playAnimation(repeatAnim, 0.0, Humanoid)
		setAnimationSpeed(animSpeed)
	end
end

-- Preload animations
function playAnimation(animName, transitionTime, humanoid) 
		
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
--		print(animName .. " " .. idx .. " [" .. origRoll .. "]")
	local anim = animTable[animName][idx].anim

	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		currentAnimTrack.Priority = Enum.AnimationPriority.Core
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
	end

end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
--		print("Keyframe : ".. frameName)	
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid, priority)	 
		
		local roll = math.random(1, animTable[animName].totalWeight) 
		local origRoll = roll
		local idx = 1
		while (roll > animTable[animName][idx].weight) do
			roll = roll - animTable[animName][idx].weight
			idx = idx + 1
		end
--		print(animName .. " * " .. idx .. " [" .. origRoll .. "]")
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			if priority then
				toolAnimTrack.Priority = priority
			end
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end


	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------


function onRunning(speed)
	if speed > 0.01 then
		playAnimation("walk", 0.1, Humanoid)
		if currentAnimInstance and currentAnimInstance.AnimationId == "http://www.roblox.com/asset/?id=180426354" then
			setAnimationSpeed(speed / 14.5)
		end
		pose = "Running"
	else
		if emoteNames[currentAnim] == nil then
			playAnimation("idle", 0.1, Humanoid)
			pose = "Standing"
		end
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / 12.0)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

function onSwimming(speed)
	if speed > 0 then
		pose = "Running"
	else
		pose = "Standing"
	end
end

function getTool()	
	for _, kid in ipairs(Figure:GetChildren()) do
		if kid.className == "Tool" then return kid end
	end
	return nil
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

function animateTool()
	
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end
end

local function moveSit()
	RightShoulder.MaxVelocity = 0.15
	LeftShoulder.MaxVelocity = 0.15
	RightShoulder:SetDesiredAngle(3.14 /2)
	LeftShoulder:SetDesiredAngle(-3.14 /2)
	RightHip:SetDesiredAngle(3.14 /2)
	LeftHip:SetDesiredAngle(-3.14 /2)
end

local lastTick = 0

local function move(time)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = time - lastTick
  	lastTick = time

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.1, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
--		print("Wha " .. pose)
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	if (setAngles) then
		local desiredAngle = amplitude * math.sin(time * frequency)

		RightShoulder:SetDesiredAngle(desiredAngle + climbFudge)
		LeftShoulder:SetDesiredAngle(desiredAngle - climbFudge)
		RightHip:SetDesiredAngle(-desiredAngle)
		LeftHip:SetDesiredAngle(-desiredAngle)
	end

	-- Tool Animation handling
	local tool = getTool()
	if tool and tool:FindFirstChild("Handle") then
	
		local animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = time + .3
		end

		if time > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end


local events = {}
local eventHum = Humanoid
local RepHumanoid = script:WaitForChild("RepHumanoid")

local function onUpdate()
	for i = 1, #events do
		events[i]:Disconnect()
	end
	
	pose = Humanoid.Sit and "Seated" or "Standing"
	
	events = {
		eventHum.Died:connect(onDied),
		eventHum.Running:connect(onRunning),
		eventHum.Jumping:connect(onJumping),
		eventHum.Climbing:connect(onClimbing),
		eventHum.GettingUp:connect(onGettingUp),
		eventHum.FreeFalling:connect(onFreeFall),
		eventHum.FallingDown:connect(onFallingDown),
		eventHum.Seated:connect(onSeated),
		eventHum.PlatformStanding:connect(onPlatformStanding),
		eventHum.Swimming:connect(onSwimming)
	}
end

RepHumanoid.Changed:Connect(function()
	eventHum = RepHumanoid.Value
	onUpdate()
end)

RepHumanoid.Value = Humanoid
script:WaitForChild("Loaded").Value = true


-- setup emote chat hook
game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if msg == "/e dance" then
		emote = dances[math.random(1, #dances)]
	elseif (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, 0.1, Humanoid)
	end

end)


-- main program

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

while Figure.Parent ~= nil do
	local _, time = wait(0.1)
	move(time)
end

end]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="NumberValue" referent="RBX7D80CCFF2E1E427186C52B764E536051">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">ScaleDampeningPercent</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<double name="Value">0.40000000596046447754</double>
				</Properties>
			</Item>
			<Item class="StringValue" referent="RBX95D6FE5BC67A4CA29431E36B9F611DD0">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">climb</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBXFED399603C0F4DF390A137AFEC0FF920">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180436334</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ClimbAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX9F743480C3774AC7B5FE20362999E0D7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">fall</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBXB2BBE393E5754608BA33223EC1DDCDCF">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180436148</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">FallAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBXC9FBCCE55F734D408EECA0EB8C91BCF5">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">idle</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX1348508473444D00B3B2C838D1F5EB9A">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180435571</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBXA9D55FE5C66A4742A7AD6FCDD09BF0CC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">9</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBX5FAAE2FF339E4824830634DD908F1C7D">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180435792</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation2</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBXF27547864D084D24B5DBBE06D5C30D1A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">1</double>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX41F14A12CEE1453B88F56A29E148CD20">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">jump</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX77E42012F8154C9DB67CC5A4C6BA5920">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750702</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">JumpAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBXCB2028EE14DB427CAC692A775C5B4AD7">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">run</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX60BD730B991648E48E7A2315D1454B2F">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180426354</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">RunAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX76E944A1A89D4BABA914C68369716688">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">sit</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBXFE2117946D3044A9BF8ED63C09DEE480">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=178130996</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SitAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX5B6679D304424E1A9106BD9F13A00799">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">toolnone</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBXCBB5305C95C44BBCADE9991D1E8AC386">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=182393478</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ToolNoneAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBXFAACE93DF4874D6B8D576BFB1F431E95">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">walk</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX71ABA9AD1047439AB4722139DDEC313F">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180426354</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">WalkAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX1A4D0029E1634B83A9FF4B6B7C6A69FD">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">R15</string>
				<string name="ScriptGuid">{EBDD5B92-3FB5-4018-9D37-1DB228DA8763}</string>
				<ProtectedString name="Source"><![CDATA[local animate = script.Parent

for _, object in next, script:GetChildren() do
	object.Parent = animate
end

return function(script)
	
local Character = script.Parent
local Humanoid = Character:WaitForChild("Humanoid")
local pose = "Standing"

local userNoUpdateOnLoopSuccess, userNoUpdateOnLoopValue = pcall(function() return UserSettings():IsUserFeatureEnabled("UserNoUpdateOnLoop") end)
local userNoUpdateOnLoop = userNoUpdateOnLoopSuccess and userNoUpdateOnLoopValue
local userAnimationSpeedDampeningSuccess, userAnimationSpeedDampeningValue = pcall(function() return UserSettings():IsUserFeatureEnabled("UserAnimationSpeedDampening") end)
local userAnimationSpeedDampening = userAnimationSpeedDampeningSuccess and userAnimationSpeedDampeningValue

local animateScriptEmoteHookFlagExists, animateScriptEmoteHookFlagEnabled = pcall(function()
	return UserSettings():IsUserFeatureEnabled("UserAnimateScriptEmoteHook")
end)
local FFlagAnimateScriptEmoteHook = animateScriptEmoteHookFlagExists and animateScriptEmoteHookFlagEnabled

local AnimationSpeedDampeningObject = script:FindFirstChild("ScaleDampeningPercent")
local HumanoidHipHeight = 2

local EMOTE_TRANSITION_TIME = 0.1

local currentAnim = ""
local currentAnimInstance = nil
local currentAnimTrack = nil
local currentAnimKeyframeHandler = nil
local currentAnimSpeed = 1.0

local runAnimTrack = nil
local runAnimKeyframeHandler = nil

local animTable = {}
local animNames = { 
	idle = 	{	
				{ id = "http://www.roblox.com/asset/?id=507766666", weight = 1 },
				{ id = "http://www.roblox.com/asset/?id=507766951", weight = 1 },
				{ id = "http://www.roblox.com/asset/?id=507766388", weight = 9 }
			},
	walk = 	{ 	
				{ id = "http://www.roblox.com/asset/?id=507777826", weight = 10 } 
			}, 
	run = 	{
				{ id = "http://www.roblox.com/asset/?id=507767714", weight = 10 } 
			}, 
	swim = 	{
				{ id = "http://www.roblox.com/asset/?id=507784897", weight = 10 } 
			}, 
	swimidle = 	{
				{ id = "http://www.roblox.com/asset/?id=507785072", weight = 10 } 
			}, 
	jump = 	{
				{ id = "http://www.roblox.com/asset/?id=507765000", weight = 10 } 
			}, 
	fall = 	{
				{ id = "http://www.roblox.com/asset/?id=507767968", weight = 10 } 
			}, 
	climb = {
				{ id = "http://www.roblox.com/asset/?id=507765644", weight = 10 } 
			}, 
	sit = 	{
				{ id = "http://www.roblox.com/asset/?id=2506281703", weight = 10 } 
			},	
	toolnone = {
				{ id = "http://www.roblox.com/asset/?id=507768375", weight = 10 } 
			},
	toolslash = {
				{ id = "http://www.roblox.com/asset/?id=522635514", weight = 10 } 
			},
	toollunge = {
				{ id = "http://www.roblox.com/asset/?id=522638767", weight = 10 } 
			},
	wave = {
				{ id = "http://www.roblox.com/asset/?id=507770239", weight = 10 } 
			},
	point = {
				{ id = "http://www.roblox.com/asset/?id=507770453", weight = 10 } 
			},
	dance = {
				{ id = "http://www.roblox.com/asset/?id=507771019", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507771955", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507772104", weight = 10 } 
			},
	dance2 = {
				{ id = "http://www.roblox.com/asset/?id=507776043", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507776720", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507776879", weight = 10 } 
			},
	dance3 = {
				{ id = "http://www.roblox.com/asset/?id=507777268", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507777451", weight = 10 }, 
				{ id = "http://www.roblox.com/asset/?id=507777623", weight = 10 } 
			},
	laugh = {
				{ id = "http://www.roblox.com/asset/?id=507770818", weight = 10 } 
			},
	cheer = {
				{ id = "http://www.roblox.com/asset/?id=507770677", weight = 10 } 
			},
}

-- Existance in this list signifies that it is an emote, the value indicates if it is a looping emote
local emoteNames = { wave = false, point = false, dance = true, dance2 = true, dance3 = true, laugh = false, cheer = false}

local PreloadAnimsUserFlag = false
local PreloadedAnims = {}
local successPreloadAnim, msgPreloadAnim = pcall(function()
	PreloadAnimsUserFlag = UserSettings():IsUserFeatureEnabled("UserPreloadAnimations")
end)
if not successPreloadAnim then
	PreloadAnimsUserFlag = false
end

math.randomseed(tick())

local function findExistingAnimationInSet(set, anim)
	if set == nil or anim == nil then
		return 0
	end
	
	for idx = 1, set.count, 1 do 
		if set[idx].anim.AnimationId == anim.AnimationId then
			return idx
		end
	end
	
	return 0
end

function configureAnimationSet(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	local allowCustomAnimations = true

	local success, msg = pcall(function() allowCustomAnimations = game:GetService("StarterPlayer").AllowCustomAnimations end)
	if not success then
		allowCustomAnimations = true
	end

	-- check for config values
	local config = script:FindFirstChild(name)
	if (allowCustomAnimations and config ~= nil) then
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		
		local idx = 0
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				local newWeight = 1
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject ~= nil) then
					newWeight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				idx = animTable[name].count
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				animTable[name][idx].weight = newWeight
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				table.insert(animTable[name].connections, childPart.ChildAdded:connect(function(property) configureAnimationSet(name, fileList) end))
				table.insert(animTable[name].connections, childPart.ChildRemoved:connect(function(property) configureAnimationSet(name, fileList) end))
			end
		end
	end
	
	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
		end
	end
	
	-- preload anims
	if PreloadAnimsUserFlag then
		for i, animType in pairs(animTable) do
			for idx = 1, animType.count, 1 do
				if PreloadedAnims[animType[idx].anim.AnimationId] == nil then
					Humanoid:LoadAnimation(animType[idx].anim)
					PreloadedAnims[animType[idx].anim.AnimationId] = true
				end				
			end
		end
	end
end

------------------------------------------------------------------------------------------------------------

local function configureAnimationSetOld(name, fileList)
	if (animTable[name] ~= nil) then
		for _, connection in pairs(animTable[name].connections) do
			connection:disconnect()
		end
	end
	animTable[name] = {}
	animTable[name].count = 0
	animTable[name].totalWeight = 0	
	animTable[name].connections = {}

	local allowCustomAnimations = true

	local success, msg = pcall(function() allowCustomAnimations = game:GetService("StarterPlayer").AllowCustomAnimations end)
	if not success then
		allowCustomAnimations = true
	end

	-- check for config values
	local config = script:FindFirstChild(name)
	if (allowCustomAnimations and config ~= nil) then
		table.insert(animTable[name].connections, config.ChildAdded:connect(function(child) configureAnimationSet(name, fileList) end))
		table.insert(animTable[name].connections, config.ChildRemoved:connect(function(child) configureAnimationSet(name, fileList) end))
		local idx = 1
		for _, childPart in pairs(config:GetChildren()) do
			if (childPart:IsA("Animation")) then
				table.insert(animTable[name].connections, childPart.Changed:connect(function(property) configureAnimationSet(name, fileList) end))
				animTable[name][idx] = {}
				animTable[name][idx].anim = childPart
				local weightObject = childPart:FindFirstChild("Weight")
				if (weightObject == nil) then
					animTable[name][idx].weight = 1
				else
					animTable[name][idx].weight = weightObject.Value
				end
				animTable[name].count = animTable[name].count + 1
				animTable[name].totalWeight = animTable[name].totalWeight + animTable[name][idx].weight
				idx = idx + 1
			end
		end
	end

	-- fallback to defaults
	if (animTable[name].count <= 0) then
		for idx, anim in pairs(fileList) do
			animTable[name][idx] = {}
			animTable[name][idx].anim = Instance.new("Animation")
			animTable[name][idx].anim.Name = name
			animTable[name][idx].anim.AnimationId = anim.id
			animTable[name][idx].weight = anim.weight
			animTable[name].count = animTable[name].count + 1
			animTable[name].totalWeight = animTable[name].totalWeight + anim.weight
			-- print(name .. " [" .. idx .. "] " .. anim.id .. " (" .. anim.weight .. ")")
		end
	end
	
	-- preload anims
	if PreloadAnimsUserFlag then
		for i, animType in pairs(animTable) do
			for idx = 1, animType.count, 1 do 
				Humanoid:LoadAnimation(animType[idx].anim)
			end
		end
	end
end

-- Setup animation objects
local function scriptChildModified(child)
	local fileList = animNames[child.Name]
	if (fileList ~= nil) then
		configureAnimationSet(child.Name, fileList)
	end	
end

script.ChildAdded:connect(scriptChildModified)
script.ChildRemoved:connect(scriptChildModified)


for name, fileList in pairs(animNames) do 
	configureAnimationSet(name, fileList)
end	

-- ANIMATION

-- declarations
local toolAnim = "None"
local toolAnimTime = 0

local jumpAnimTime = 0
local jumpAnimDuration = 0.31

local toolTransitionTime = 0.1
local fallTransitionTime = 0.2

local currentlyPlayingEmote = false

-- functions

function stopAllAnimations()
	local oldAnim = currentAnim

	-- return to idle if finishing an emote
	if (emoteNames[oldAnim] ~= nil and emoteNames[oldAnim] == false) then
		oldAnim = "idle"
	end
	
	if FFlagAnimateScriptEmoteHook and currentlyPlayingEmote then
		oldAnim = "idle"
		currentlyPlayingEmote = false
	end

	currentAnim = ""
	currentAnimInstance = nil
	if (currentAnimKeyframeHandler ~= nil) then
		currentAnimKeyframeHandler:disconnect()
	end

	if (currentAnimTrack ~= nil) then
		currentAnimTrack:Stop()
		currentAnimTrack:Destroy()
		currentAnimTrack = nil
	end

	-- clean up walk if there is one
	if (runAnimKeyframeHandler ~= nil) then
		runAnimKeyframeHandler:disconnect()
	end
	
	if (runAnimTrack ~= nil) then
		runAnimTrack:Stop()
		runAnimTrack:Destroy()
		runAnimTrack = nil
	end
	
	return oldAnim
end

function getHeightScale()
	if Humanoid then
		if not Humanoid.AutomaticScalingEnabled then
			return 1
		end
		
		local scale = Humanoid.HipHeight / HumanoidHipHeight
		if userAnimationSpeedDampening then
			if AnimationSpeedDampeningObject == nil then
				AnimationSpeedDampeningObject = script:FindFirstChild("ScaleDampeningPercent")
			end
			if AnimationSpeedDampeningObject ~= nil then
				scale = 1 + (Humanoid.HipHeight - HumanoidHipHeight) * AnimationSpeedDampeningObject.Value / HumanoidHipHeight
			end
		end
		return scale
	end	
	return 1
end

local smallButNotZero = 0.0001
function setRunSpeed(speed)
	local speedScaled = speed * 1.25
	local heightScale = getHeightScale()
	local runSpeed = speedScaled / heightScale

	if runSpeed ~= currentAnimSpeed then
		if runSpeed < 0.33 then
			currentAnimTrack:AdjustWeight(1.0)		
			runAnimTrack:AdjustWeight(smallButNotZero)
		elseif runSpeed < 0.66 then
			local weight = ((runSpeed - 0.33) / 0.33)
			currentAnimTrack:AdjustWeight(1.0 - weight + smallButNotZero)
			runAnimTrack:AdjustWeight(weight + smallButNotZero)
		else
			currentAnimTrack:AdjustWeight(smallButNotZero)
			runAnimTrack:AdjustWeight(1.0)
		end
		currentAnimSpeed = runSpeed
		runAnimTrack:AdjustSpeed(runSpeed)
		currentAnimTrack:AdjustSpeed(runSpeed)
	end	
end

function setAnimationSpeed(speed)
	if currentAnim == "walk" then
			setRunSpeed(speed)
	else
		if speed ~= currentAnimSpeed then
			currentAnimSpeed = speed
			currentAnimTrack:AdjustSpeed(currentAnimSpeed)
		end
	end
end

function keyFrameReachedFunc(frameName)
	if (frameName == "End") then
		if currentAnim == "walk" then
			if userNoUpdateOnLoop == true then
				if runAnimTrack.Looped ~= true then
					runAnimTrack.TimePosition = 0.0
				end
				if currentAnimTrack.Looped ~= true then
					currentAnimTrack.TimePosition = 0.0
				end
			else
				runAnimTrack.TimePosition = 0.0
				currentAnimTrack.TimePosition = 0.0
			end
		else
			local repeatAnim = currentAnim
			-- return to idle if finishing an emote
			if (emoteNames[repeatAnim] ~= nil and emoteNames[repeatAnim] == false) then
				repeatAnim = "idle"
			end
			
			if FFlagAnimateScriptEmoteHook and currentlyPlayingEmote then
				if currentAnimTrack.Looped then
					-- Allow the emote to loop
					return
				end
				
				repeatAnim = "idle"
				currentlyPlayingEmote = false
			end
			
			local animSpeed = currentAnimSpeed
			playAnimation(repeatAnim, 0.15, Humanoid)
			setAnimationSpeed(animSpeed)
		end
	end
end

function rollAnimation(animName)
	local roll = math.random(1, animTable[animName].totalWeight) 
	local origRoll = roll
	local idx = 1
	while (roll > animTable[animName][idx].weight) do
		roll = roll - animTable[animName][idx].weight
		idx = idx + 1
	end
	return idx
end

local function switchToAnim(anim, animName, transitionTime, humanoid)
	-- switch animation		
	if (anim ~= currentAnimInstance) then
		
		if (currentAnimTrack ~= nil) then
			currentAnimTrack:Stop(transitionTime)
			currentAnimTrack:Destroy()
		end

		if (runAnimTrack ~= nil) then
			runAnimTrack:Stop(transitionTime)
			runAnimTrack:Destroy()
			if userNoUpdateOnLoop == true then
				runAnimTrack = nil
			end
		end

		currentAnimSpeed = 1.0
	
		-- load it to the humanoid; get AnimationTrack
		currentAnimTrack = humanoid:LoadAnimation(anim)
		currentAnimTrack.Priority = Enum.AnimationPriority.Core
		 
		-- play the animation
		currentAnimTrack:Play(transitionTime)
		currentAnim = animName
		currentAnimInstance = anim

		-- set up keyframe name triggers
		if (currentAnimKeyframeHandler ~= nil) then
			currentAnimKeyframeHandler:disconnect()
		end
		currentAnimKeyframeHandler = currentAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)
		
		-- check to see if we need to blend a walk/run animation
		if animName == "walk" then
			local runAnimName = "run"
			local runIdx = rollAnimation(runAnimName)

			runAnimTrack = humanoid:LoadAnimation(animTable[runAnimName][runIdx].anim)
			runAnimTrack.Priority = Enum.AnimationPriority.Core
			runAnimTrack:Play(transitionTime)		
			
			if (runAnimKeyframeHandler ~= nil) then
				runAnimKeyframeHandler:disconnect()
			end
			runAnimKeyframeHandler = runAnimTrack.KeyframeReached:connect(keyFrameReachedFunc)	
		end
	end
end

function playAnimation(animName, transitionTime, humanoid) 	
	local idx = rollAnimation(animName)
	local anim = animTable[animName][idx].anim

	switchToAnim(anim, animName, transitionTime, humanoid)
	currentlyPlayingEmote = false
end

function playEmote(emoteAnim, transitionTime, humanoid)
	switchToAnim(emoteAnim, emoteAnim.Name, transitionTime, humanoid)
	currentlyPlayingEmote = true
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

local toolAnimName = ""
local toolAnimTrack = nil
local toolAnimInstance = nil
local currentToolAnimKeyframeHandler = nil

function toolKeyFrameReachedFunc(frameName)
	if (frameName == "End") then
		playToolAnimation(toolAnimName, 0.0, Humanoid)
	end
end


function playToolAnimation(animName, transitionTime, humanoid, priority)	 		
		local idx = rollAnimation(animName)
		local anim = animTable[animName][idx].anim

		if (toolAnimInstance ~= anim) then
			
			if (toolAnimTrack ~= nil) then
				toolAnimTrack:Stop()
				toolAnimTrack:Destroy()
				transitionTime = 0
			end
					
			-- load it to the humanoid; get AnimationTrack
			toolAnimTrack = humanoid:LoadAnimation(anim)
			if priority then
				toolAnimTrack.Priority = priority
			end
			 
			-- play the animation
			toolAnimTrack:Play(transitionTime)
			toolAnimName = animName
			toolAnimInstance = anim

			currentToolAnimKeyframeHandler = toolAnimTrack.KeyframeReached:connect(toolKeyFrameReachedFunc)
		end
end

function stopToolAnimations()
	local oldAnim = toolAnimName

	if (currentToolAnimKeyframeHandler ~= nil) then
		currentToolAnimKeyframeHandler:disconnect()
	end

	toolAnimName = ""
	toolAnimInstance = nil
	if (toolAnimTrack ~= nil) then
		toolAnimTrack:Stop()
		toolAnimTrack:Destroy()
		toolAnimTrack = nil
	end

	return oldAnim
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------
-- STATE CHANGE HANDLERS

function onRunning(speed)	
	if speed > 0.75 then
		local scale = 16.0
		playAnimation("walk", 0.2, Humanoid)
		setAnimationSpeed(speed / scale)
		pose = "Running"
	else
		if emoteNames[currentAnim] == nil and not currentlyPlayingEmote then
			playAnimation("idle", 0.2, Humanoid)
			pose = "Standing"
		end
	end
end

function onDied()
	pose = "Dead"
end

function onJumping()
	playAnimation("jump", 0.1, Humanoid)
	jumpAnimTime = jumpAnimDuration
	pose = "Jumping"
end

function onClimbing(speed)
	local scale = 5.0
	playAnimation("climb", 0.1, Humanoid)
	setAnimationSpeed(speed / scale)
	pose = "Climbing"
end

function onGettingUp()
	pose = "GettingUp"
end

function onFreeFall()
	if (jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	end
	pose = "FreeFall"
end

function onFallingDown()
	pose = "FallingDown"
end

function onSeated()
	pose = "Seated"
end

function onPlatformStanding()
	pose = "PlatformStanding"
end

-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

function onSwimming(speed)
	if speed > 1.00 then
		local scale = 10.0
		playAnimation("swim", 0.4, Humanoid)
		setAnimationSpeed(speed / scale)
		pose = "Swimming"
	else
		playAnimation("swimidle", 0.4, Humanoid)
		pose = "Standing"
	end
end

function animateTool()
	if (toolAnim == "None") then
		playToolAnimation("toolnone", toolTransitionTime, Humanoid, Enum.AnimationPriority.Idle)
		return
	end

	if (toolAnim == "Slash") then
		playToolAnimation("toolslash", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end

	if (toolAnim == "Lunge") then
		playToolAnimation("toollunge", 0, Humanoid, Enum.AnimationPriority.Action)
		return
	end
end

function getToolAnim(tool)
	for _, c in ipairs(tool:GetChildren()) do
		if c.Name == "toolanim" and c.className == "StringValue" then
			return c
		end
	end
	return nil
end

local lastTick = 0

local function stepAnimate(currentTime)
	local amplitude = 1
	local frequency = 1
  	local deltaTime = currentTime - lastTick
  	lastTick = currentTime

	local climbFudge = 0
	local setAngles = false

  	if (jumpAnimTime > 0) then
  		jumpAnimTime = jumpAnimTime - deltaTime
  	end

	if (pose == "FreeFall" and jumpAnimTime <= 0) then
		playAnimation("fall", fallTransitionTime, Humanoid)
	elseif (pose == "Seated") then
		playAnimation("sit", 0.5, Humanoid)
		return
	elseif (pose == "Running") then
		playAnimation("walk", 0.2, Humanoid)
	elseif (pose == "Dead" or pose == "GettingUp" or pose == "FallingDown" or pose == "Seated" or pose == "PlatformStanding") then
		stopAllAnimations()
		amplitude = 0.1
		frequency = 1
		setAngles = true
	end

	-- Tool Animation handling
	local tool = Character:FindFirstChildOfClass("Tool")
	if tool and tool:FindFirstChild("Handle") then
		local animStringValueObject = getToolAnim(tool)

		if animStringValueObject then
			toolAnim = animStringValueObject.Value
			-- message recieved, delete StringValue
			animStringValueObject.Parent = nil
			toolAnimTime = currentTime + .3
		end

		if currentTime > toolAnimTime then
			toolAnimTime = 0
			toolAnim = "None"
		end

		animateTool()		
	else
		stopToolAnimations()
		toolAnim = "None"
		toolAnimInstance = nil
		toolAnimTime = 0
	end
end

-- connect events

local events = {}
local eventHum = Humanoid
local RepHumanoid = script:WaitForChild("RepHumanoid")

local function onUpdate()
	for i = 1, #events do
		events[i]:Disconnect()
	end
	
	pose = Humanoid.Sit and "Seated" or "Standing"
	
	events = {
		eventHum.Died:connect(onDied),
		eventHum.Running:connect(onRunning),
		eventHum.Jumping:connect(onJumping),
		eventHum.Climbing:connect(onClimbing),
		eventHum.GettingUp:connect(onGettingUp),
		eventHum.FreeFalling:connect(onFreeFall),
		eventHum.FallingDown:connect(onFallingDown),
		eventHum.Seated:connect(onSeated),
		eventHum.PlatformStanding:connect(onPlatformStanding),
		eventHum.Swimming:connect(onSwimming)
	}
end

RepHumanoid.Changed:Connect(function()
	eventHum = RepHumanoid.Value
	onUpdate()
end)

RepHumanoid.Value = Humanoid
script:WaitForChild("Loaded").Value = true

-- setup emote chat hook
game:GetService("Players").LocalPlayer.Chatted:connect(function(msg)
	local emote = ""
	if (string.sub(msg, 1, 3) == "/e ") then
		emote = string.sub(msg, 4)
	elseif (string.sub(msg, 1, 7) == "/emote ") then
		emote = string.sub(msg, 8)
	end
	
	if (pose == "Standing" and emoteNames[emote] ~= nil) then
		playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
	end
end)

-- emote bindable hook
if FFlagAnimateScriptEmoteHook then
	script:WaitForChild("PlayEmote").OnInvoke = function(emote)
		-- Only play emotes when idling
		if pose ~= "Standing" then
			return
		end
	
		if emoteNames[emote] ~= nil then
			-- Default emotes
			playAnimation(emote, EMOTE_TRANSITION_TIME, Humanoid)
			
			return true
		elseif typeof(emote) == "Instance" and emote:IsA("Animation") then
			-- Non-default emotes
			playEmote(emote, EMOTE_TRANSITION_TIME, Humanoid)
			return true
		end
		
		-- Return false to indicate that the emote could not be played
		return false
	end
end

-- initialize to idle
playAnimation("idle", 0.1, Humanoid)
pose = "Standing"

-- loop to handle timed state transitions and tool animations
while Character.Parent ~= nil do
	local _, currentGameTime = wait(0.1)
	stepAnimate(currentGameTime)
end

end

]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="StringValue" referent="RBX29E3D3B75684430680D36E123AE4B989">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">cheer</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX7BE9EBE21CC3432BB3FDAE64FAA906C0">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507770677</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">CheerAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX0C026C60506F4FCBB4A517F14157B5EF">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">climb</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX88474938B0E1447188C300917F67F7C4">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507765644</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ClimbAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX0DF196216ACE40319CAEE3F76CA1BBFF">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">dance</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX37A9AF8311CE46D896771938F8350C43">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507771019</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBX7D8C1BCE975C4D7E9EC7DB1F988F2148">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBX574B79E9C5CC4BD4ABC39FB5111EB0A9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507771955</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation2</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBX02648DAAFEFC4223AB1055C662EEF4A4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBX1544DB096A1246E699552C0222F6C0A6">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507772104</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation3</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBX20049255A7C54BF9B2805E560D9FF6C4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX040DA7730E164F3C8A4009B67BF8FBAC">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">dance2</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX000F6FDA894944FD8063AA9ADA9CD535">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507776043</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBXCF50AD77EC7D47F692EE8F8AA4A65D8A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBXF4868C3A4F334A768DEA1AE392731AD3">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507776720</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation2</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBXCC43C2CB5A3449A7872AA9C42B074D06">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBXB1039B2E1ED1499F92A7540001C62205">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507776879</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation3</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBX04E6B1E0E4B94A2B803FA5CD0CAADAF9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX97F313E04631486CA1A85698CC1B1362">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">dance3</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBXB4832FBEFB214B97B273F984F0025ACC">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507777268</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBXF24DD530B80A42C1ACCDF8D2561A12C0">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBXBF78452BECD648CD9C23AE5A89EFECFE">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507777451</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation2</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBX92FAB599E0FA4AFAAAA5CEC3E139F5F3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBX4742179FAA2F4EC69FBB07A49E91C994">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507777623</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation3</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBXF3894968FA2D4435BA3C75883C8808EE">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">10</double>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX1FA8F4C975C0471888C26CFF9ABB4EE6">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">fall</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX3162E051C7CB4A3B9332AF2D4352545E">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507767968</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">FallAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX591C9EE48AAB4FCB9F3508295C9A05AF">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">idle</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBXC321EEEAFD2C4935B0CAD22F9C39EBEC">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507766388</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation1</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBXB1B4A265D70E4F29A38BB917D42795AA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">9</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Animation" referent="RBX11F32F83B3E84EC5A056580984878457">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507766666</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Animation2</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="NumberValue" referent="RBX96FA86A9967F4E8FBD7FA5E6D7AFD525">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Weight</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<double name="Value">1</double>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX72B56384A45448F4A1809BD336DB4CA3">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">jump</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX9E7C4F2575B840FE8EF408B0F5872DAD">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507765000</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">JumpAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBXF30ACA89D38B4D15A00E6123DE492FD4">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">laugh</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX1E9C5A37BC384048947D71B8A2768355">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507770818</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">LaughAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX61F425FB57DB44529EAE2A553241DE35">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">point</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX01A05B526AC547F688564DF281DE10CF">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507770453</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">PointAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX8FBC7F45CD04469286020CF3FBD8BF30">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">run</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX7F245352C2FF44B1A6038FE6BA990B3A">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=913376220</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">RunAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX4B7361D1B4AD452EB87BB240C2155DD4">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">sit</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX75410D7B07E84563BEAD3684662A62E4">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=2506281703</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SitAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX2D67977515084EB5840B81630F3F8FF8">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">swim</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX7EAE932CC36B44FABB76C7F873CE6135">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=913384386</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Swim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBXE2E78EAFC6CE44DA86817E3A04C940F2">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">swimidle</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX34041255CBE34FC8A7C0091FE1745DAC">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=913389285</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SwimIdle</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX47E85C72CB18461BA437236794F5E5C5">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">toollunge</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBXB667D8E082844914BD66024CE917924B">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=522638767</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ToolLungeAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX32598443BF6248F6838785876C3ED0F1">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">toolnone</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX41783A7AE6964CE2893AB8D7A4B43B8E">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507768375</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ToolNoneAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX953056DFDB5E43848C17FCF1802F7EB3">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">toolslash</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX52DA5492715542BFB0D82BEE4DF57D4A">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=522635514</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ToolSlashAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX6DE706B52FEE4DF7B8784DFA9AF36AA5">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">walk</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBX992271AEF3024E6C849FEB0F01A6264B">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=913402848</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">WalkAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="StringValue" referent="RBX5C2BD4D5B42D48B99C6CC77E286C6CA1">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">wave</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<string name="Value"></string>
				</Properties>
				<Item class="Animation" referent="RBXDB965ED8BFB84F89A0037DB23C89297E">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=507770239</url></Content>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">WaveAnim</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
	<Item class="LocalScript" referent="RBXF53A4AB200E44AC2B988A0C5B2695F3C">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<bool name="Disabled">false</bool>
			<Content name="LinkedSource"><null></null></Content>
			<string name="Name">WallStickCreate</string>
			<string name="ScriptGuid">{3A57B66C-A82A-4FB3-951D-1EEED09A4047}</string>
			<ProtectedString name="Source"><![CDATA[local PLAYERS = game:GetService("Players")
local localPlayer = PLAYERS.LocalPlayer

local WallStickClass = require(game.ReplicatedStorage.WallStick)
local Raycast = require(script:WaitForChild("Raycast"))

WallStickClass.WaitForAppearance(localPlayer)
local wallStick = WallStickClass.new(localPlayer)
local targetRate = wallStick.Camera.TransitionRate

local function lerp(a, b, t)
	return (b - a)*t + a
end

local function clampCloseToOne(t, margin)
	if (math.abs(1 - t) < margin) then
		return 1
	end
	return t
end

local lastPart = nil
local lastNormal = Vector3.new(0, 1, 0)

function wallStick:GetFloorAndNormal()
	if (tick() - self.LastTick < 0.3) then --update rate
		return
	end
	
	local characters = {}
	for i, player in next, PLAYERS:GetPlayers() do
		characters[i] = player.Character
	end
	
	local hrpCF = self.HRP.CFrame
	local height = self.Character:GetExtentsSize().y * 0.75 + 2
	local ray = Ray.new(hrpCF.p, -height*hrpCF.UpVector)
	
--	local floor, _, normal = Raycast.FindPartOnRayWithCallback(ray, characters, false, true, 5, function(hit, position, normal, material)
--		if (not hit) then
--			return Raycast.CallbackResult.Finished
--		elseif (hit.CanCollide) then
--			return Raycast.CallbackResult.Finished
--		else
--			table.insert(characters, hit)
--			return Raycast.CallbackResult.Continue
--		end
--	end)

	local floor, _, normal = Raycast.FindPartOnRay(ray, localPlayer.Character, true, true)
	
	if (floor) then	
		if (floor.Name == "TargetA" or not floor.Anchored) then
			targetRate = 0.1
		else
			self.Camera.TransitionRate = 0.1
			targetRate = 0.1
		end
	end
	
	self.Camera.TransitionRate = clampCloseToOne(lerp(self.Camera.TransitionRate, targetRate, 0.1), 1E-4)

	if (floor and floor.CanCollide and floor.Name ~= "Ignore") then
		lastPart = floor
		if floor.Shape ~= Enum.PartType.Ball then
			lastNormal = lastNormal:lerp(floor.CFrame:VectorToObjectSpace(normal), 0.99)
			return floor, lastNormal
		else
			local processedNorm = lastPart.CFrame:VectorToObjectSpace((localPlayer.Character.HumanoidRootPart.Position - lastPart.Position).Unit)
			return floor, processedNorm
		end
	elseif floor == nil and lastPart and lastPart.Shape == Enum.PartType.Ball then
		--print("!")
		local processedNorm = lastPart.CFrame:VectorToObjectSpace((localPlayer.Character.HumanoidRootPart.Position - lastPart.Position).Unit)
		return lastPart, processedNorm
	end
end

--For Newly Spawning Players
local dict = {nil, math.huge}
for _, body in pairs(workspace.CelestialBodies:GetChildren()) do
	if body.Name ~= "Center" then
		local d = (body.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
		if d < dict[2] then
			dict[1] = body
			dict[2] = d
		end
	end
end
if dict[1] then
	lastPart = dict[1]
	lastNormal = lastPart.CFrame:VectorToObjectSpace((localPlayer.Character.HumanoidRootPart.Position - lastPart.Position).Unit)
end]]></ProtectedString>
			<int64 name="SourceAssetId">-1</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="ModuleScript" referent="RBXF28A87B05F414C82AF51F1AB53C3A5CE">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Raycast</string>
				<string name="ScriptGuid">{1FFCA010-058E-4124-902D-D55A5C2BDEB3}</string>
				<ProtectedString name="Source"><![CDATA[local WORKSPACE = game:GetService("Workspace")

local CALLBACKRESULT 	= {}
CALLBACKRESULT.Continue = 1
CALLBACKRESULT.Finished = 2
CALLBACKRESULT.Fail 	= 3

local Raycast = {}
Raycast.CallbackResult = CALLBACKRESULT

--

function Raycast.FindPartOnRay(ray, ignore, terrainCellsAreCubes, ignoreWater)
	return WORKSPACE:FindPartOnRay(ray, ignore, terrainCellsAreCubes, ignoreWater)
end

function Raycast.FindPartOnRayWithIgnoreList(ray, ignoreList, terrainCellsAreCubes, ignoreWater)
	return WORKSPACE:FindPartOnRayWithIgnoreList(ray, ignoreList, terrainCellsAreCubes, ignoreWater)
end

function Raycast.FindPartOnRayWithWhiteList(ray, whiteList, terrainCellsAreCubes, ignoreWater)
	return WORKSPACE:FindPartOnRayWithWhitelist(ray, whiteList, terrainCellsAreCubes, ignoreWater)
end

--

function Raycast.FindPartOnRayWithCallbackWithIgnoreList(ray, list, terrainCellsAreCubes, ignoreWater, loopout, callbackFunc)
	local maxDistance = ray.Direction.Magnitude
	local direction = ray.Direction.Unit
	
	loopout = loopout or 25
	local loopCount = 0
	
	local lastPosition = ray.Origin
	local distance = 0
	
	local hit, position, normal, material
	
	repeat
		local r = Ray.new(lastPosition, direction * (maxDistance - distance))
		hit, position, normal, material = WORKSPACE:FindPartOnRayWithIgnoreList(ray, list, terrainCellsAreCubes, ignoreWater, true)
		local result = callbackFunc(hit, position, normal, material)
		
		if (result == CALLBACKRESULT.Continue) then
			distance = (ray.Origin - position).Magnitude
			lastPosition = position
		elseif (result == CALLBACKRESULT.Finished) then
			return hit, position, normal, material
		elseif (result == CALLBACKRESULT.Fail or result == nil) then
			break
		end
		
		loopCount = loopCount + 1
	until (loopCount > loopout or distance >= maxDistance - 0.1)
	
	return
end

function Raycast.FindPartOnRayWithCallbackWithWhiteList(ray, list, terrainCellsAreCubes, ignoreWater, callbackFunc)
	local maxDistance = ray.Direction.Magnitude
	local direction = ray.Direction.Unit
	
	local lastPosition = ray.Origin
	local distance = 0
	
	local hit, position, normal, material
	
	repeat
		local r = Ray.new(lastPosition, direction * (maxDistance - distance))
		hit, position, normal, material = WORKSPACE:FindPartOnRayWithWhiteList(ray, list, terrainCellsAreCubes, ignoreWater, true)
		local result = callbackFunc(hit, position, normal, material)
		
		if (result == CALLBACKRESULT.Continue) then
			distance = (ray.Origin - position).Magnitude
			lastPosition = position
		elseif (result == CALLBACKRESULT.Finished) then
			return hit, position, normal, material
		elseif (result == CALLBACKRESULT.Fail or result == nil) then
			break
		end
	until (distance >= maxDistance - 0.1)
	
	return
end

function Raycast.FindPartOnRayWithCallback(ray, ignore, terrainCellsAreCubes, ignoreWater, callbackFunc)
	return Raycast.FindPartOnRayWithCallbackWithIgnoreList(ray, {ignore}, terrainCellsAreCubes, ignoreWater, callbackFunc)
end

--

return Raycast]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
</roblox>